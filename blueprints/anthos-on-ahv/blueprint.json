{"status":{},"contains_secrets":false,"product_version":"3.2.0","spec":{"description":"","resources":{"client_attrs":{"None":{"Profile":{"Default":{"Action":{},"dsl_name":"Default"}},"Package":{"AHV_CENTOS":{"Action":{},"dsl_name":"AHV_CENTOS"},"AdminVM_Package":{"Action":{},"dsl_name":"AdminVM_Package"},"ControlPlaneVMs_Package":{"Action":{},"dsl_name":"ControlPlaneVMs_Package"},"WorkerNodesVMs_Package":{"Action":{},"dsl_name":"WorkerNodesVMs_Package"}},"Substrate":{"ControlPlaneVMs_Substrate":{"Action":{},"dsl_name":"ControlPlaneVMs_Substrate"},"AdminVM_Substrate":{"Action":{},"dsl_name":"AdminVM_Substrate"},"WorkerNodesVMs_Substrate":{"Action":{},"dsl_name":"WorkerNodesVMs_Substrate"}},"Service":{"ControlPlaneVMs":{"Action":{},"dsl_name":"ControlPlaneVMs"},"AdminVM":{"Action":{},"dsl_name":"AdminVM"},"WorkerNodesVMs":{"Action":{},"dsl_name":"WorkerNodesVMs"}},"Deployment":{"AdminVM_Deployment":{"Action":{},"dsl_name":"AdminVM_Deployment"},"WorkerNodesVMs_Deployment":{"Action":{},"dsl_name":"WorkerNodesVMs_Deployment"},"ControlPlaneVMs_Deployment":{"Action":{},"dsl_name":"ControlPlaneVMs_Deployment"}}}},"service_definition_list":[{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Anthos_Create_Cluster"},{"kind":"app_task","name":"GKE_Configure_CloudConsole"}],"name":"AdminVM___create___dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Anthos_Create_Cluster"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"GKE_Configure_CloudConsole"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Anthos_Create_Cluster","attrs":{"type":"","inarg_list":[],"runbook_reference":{"kind":"app_runbook","name":"AdminVM_Anthos_Create_Cluster_runbook"}},"timeout_secs":"0","type":"CALL_RUNBOOK","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"GKE_Configure_CloudConsole","attrs":{"type":"","inarg_list":[],"runbook_reference":{"kind":"app_runbook","name":"AdminVM_GKE_Configure_CloudConsole_runbook"}},"timeout_secs":"0","type":"CALL_RUNBOOK","variable_list":[]}],"description":"","name":"AdminVM___create___runbook","main_task_local_reference":{"kind":"app_task","name":"AdminVM___create___dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for starting an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"AdminVM___start___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"AdminVM___start___runbook","main_task_local_reference":{"kind":"app_task","name":"AdminVM___start___dag"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"AdminVM___stop___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"AdminVM___stop___runbook","main_task_local_reference":{"kind":"app_task","name":"AdminVM___stop___dag"},"variable_list":[]},"name":"action_stop"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"AdminVM___delete___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"AdminVM___delete___runbook","main_task_local_reference":{"kind":"app_task","name":"AdminVM___delete___dag"},"variable_list":[]},"name":"action_delete"},{"description":"System action for restarting an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"AdminVM___restart___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"AdminVM___restart___runbook","main_task_local_reference":{"kind":"app_task","name":"AdminVM___restart___dag"},"variable_list":[]},"name":"action_restart"},{"description":"System action for deleting an application. Does not delete created VMs","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"AdminVM___soft_delete___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"AdminVM___soft_delete___runbook","main_task_local_reference":{"kind":"app_task","name":"AdminVM___soft_delete___dag"},"variable_list":[]},"name":"action_soft_delete"},{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Install_SDK"},{"kind":"app_task","name":"Configure_Gcloud"}],"name":"AdminVM_Gcloud_Install_SDK_dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Install_SDK"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Configure_Gcloud"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Install_SDK","attrs":{"script":"sudo tee -a \/etc\/yum.repos.d\/google-cloud-sdk.repo << EOM\n[google-cloud-sdk]\nname=Google Cloud SDK\nbaseurl=https:\/\/packages.cloud.google.com\/yum\/repos\/cloud-sdk-el7-x86_64\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https:\/\/packages.cloud.google.com\/yum\/doc\/yum-key.gpg\n       https:\/\/packages.cloud.google.com\/yum\/doc\/rpm-package-key.gpg\nEOM\n\nsudo dnf install -y google-cloud-sdk kubectl","type":"","command_line_args":"","exit_status":[],"script_type":"sh"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Configure_Gcloud","attrs":{"exit_status":[],"script":"account=@@{CRED_GCLOUD.username}@@\nsecret='@@{CRED_GCLOUD.secret}@@'\n\n# ============== DO NO CHANGE AFTER THIS ===============\n\ntmpfile=$(mktemp \/tmp\/gcloud-anthos.XXXXXX)\nexec 3>\"$tmpfile\"\necho \"$secret\" >&3\nexec 3>&-\n\nproject_id=$(grep project_id $tmpfile | awk -F'\"' '{print $4}')\ngcloud auth activate-service-account $account --key-file=$tmpfile --project=$project_id\n\n# rm \"$tmpfile\"\necho \"GCP_PROJECT_ID=$project_id\"\necho \"GCP_KEY=$tmpfile\"","eval_variables":["GCP_PROJECT_ID","GCP_KEY"],"eval_scope":"local","type":"","script_type":"sh"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"AdminVM_Gcloud_Install_SDK_runbook","main_task_local_reference":{"kind":"app_task","name":"AdminVM_Gcloud_Install_SDK_dag"},"variable_list":[]},"name":"Gcloud_Install_SDK"},{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Install_CLI"}],"name":"AdminVM_Anthos_Install_CLI_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Install_CLI","attrs":{"script":"cluster_name=@@{ANTHOS_CLUSTER_NAME}@@\nproject_id=@@{GCP_PROJECT_ID}@@ \ntmpfile=@@{GCP_KEY}@@\nos_secret='@@{CRED_OS.secret}@@'\n\n# ============== DO NO CHANGE AFTER THIS ===============\n\n# Install Anthos CLI (bmctl)\ncd ~\nmkdir baremetal\ncd baremetal\ngsutil cp gs:\/\/anthos-baremetal-release\/bmctl\/1.6.1\/linux-amd64\/bmctl bmctl\nchmod a+x bmctl\n\n# Create Anthos configuration template\necho \"$os_secret\" > ~\/.ssh\/id_rsa\nchmod 600 ~\/.ssh\/id_rsa\n\nexport GOOGLE_APPLICATION_CREDENTIALS=\"$tmpfile\"\n\ncd ~\/baremetal\n\n.\/bmctl create config -c $cluster_name \\\n  --enable-apis --create-service-accounts --project-id=$project_id\n","type":"","command_line_args":"","exit_status":[],"script_type":"sh"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"AdminVM_Anthos_Install_CLI_runbook","main_task_local_reference":{"kind":"app_task","name":"AdminVM_Anthos_Install_CLI_dag"},"variable_list":[]},"name":"Anthos_Install_CLI"},{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Create_Cluster"}],"name":"AdminVM_Anthos_Create_Cluster_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Create_Cluster","attrs":{"exit_status":[],"script":"export ANTHOS_TEMPLATE_PATH=\"\/home\/nutanix\/baremetal\/bmctl-workspace\/@@{ANTHOS_CLUSTER_NAME}@@\/@@{ANTHOS_CLUSTER_NAME}@@.yaml\"\nexport ANTHOS_SSH_KEY=\"\/home\/nutanix\/.ssh\/id_rsa\"\nexport ANTHOS_CLUSTER_TYPE=\"hybrid\"\nexport ANTHOS_CONTROLPLANE_ADDRESSES=\"@@{ControlPlaneVMs.address}@@\"\nexport ANTHOS_CONTROLPLANE_VIP=@@{ANTHOS_CONTROLPLANE_VIP}@@\nexport ANTHOS_PODS_NETWORK=@@{ANTHOS_PODS_NETWORK}@@\nexport ANTHOS_SERVICES_NETWORK=@@{ANTHOS_SERVICES_NETWORK}@@\nexport ANTHOS_INGRESS_VIP=@@{ANTHOS_INGRESS_VIP}@@\nexport ANTHOS_LB_ADDRESSPOOL=@@{ANTHOS_LB_ADDRESSPOOL}@@\nexport ANTHOS_LVPNODEMOUNTS=\"\/home\/nutanix\/localpv-disk\"\nexport ANTHOS_LVPSHARE=\"\/home\/nutanix\/localpv-share\"\nexport ANTHOS_LOGINUSER=\"nutanix\"\nexport ANTHOS_WORKERNODES_ADDRESSES=\"@@{WorkerNodesVMs.address}@@\"\nexport ANTHOS_CLUSTER_NAME=\"@@{ANTHOS_CLUSTER_NAME}@@\"\nexport GOOGLE_APPLICATION_CREDENTIALS=\"@@{GCP_KEY}@@\"\nexport PYTHON_ANTHOS_GENCONFIG=\"@@{PYTHON_ANTHOS_GENCONFIG}@@\"\n\n# ============== DO NO CHANGE AFTER THIS ===============\n\n# Install PyYAML\nsudo python2 -m pip install pyyaml\n\n# Create Anthos configuration file\ncd ~\/baremetal\ncurl -s $PYTHON_ANTHOS_GENCONFIG | python2\n\n# Create Anthos Kubernetes cluster\nif .\/bmctl create cluster -c $ANTHOS_CLUSTER_NAME > \/dev\/null ; then\n    export KUBECONFIG=$HOME\/baremetal\/bmctl-workspace\/${ANTHOS_CLUSTER_NAME}\/${ANTHOS_CLUSTER_NAME}-kubeconfig\n    echo \"KUBECONFIG=$KUBECONFIG\"\nelse\n    exit 1\nfi\n\n","eval_variables":["KUBECONFIG"],"eval_scope":"local","type":"","script_type":"sh"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"AdminVM_Anthos_Create_Cluster_runbook","main_task_local_reference":{"kind":"app_task","name":"AdminVM_Anthos_Create_Cluster_dag"},"variable_list":[]},"name":"Anthos_Create_Cluster"},{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"GKE_Configure_CloudConsole"}],"name":"AdminVM_GKE_Configure_CloudConsole_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"GKE_Configure_CloudConsole","attrs":{"script":"export KUBECONFIG=@@{KUBECONFIG}@@\nexport KSA_NAME=@@{KUBERNETES_SERVICE_ACCOUNT}@@\n\n# ============== DO NO CHANGE AFTER THIS ===============\n\ncat <<EOF | kubectl apply -f -\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: cloud-console-reader\nrules:\n- apiGroups: [\"\"]\n  resources: [\"nodes\", \"persistentvolumes\"]\n  verbs: [\"get\", \"list\", \"watch\"]\n- apiGroups: [\"storage.k8s.io\"]\n  resources: [\"storageclasses\"]\n  verbs: [\"get\", \"list\", \"watch\"]\nEOF\n\nkubectl create serviceaccount ${KSA_NAME}\nkubectl create clusterrolebinding ${KSA_NAME}-view \\\n--clusterrole view --serviceaccount default:${KSA_NAME}\nkubectl create clusterrolebinding ${KSA_NAME}-reader \\\n--clusterrole cloud-console-reader --serviceaccount default:${KSA_NAME}\n\nkubectl create clusterrolebinding ${KSA_NAME}-admin \\\n--clusterrole cluster-admin --serviceaccount default:${KSA_NAME}\n\n# SECRET_NAME=$(kubectl get serviceaccount google-cloud-console -o jsonpath='{$.secrets[0].name}')\n# kubectl get secret ${SECRET_NAME} -o jsonpath='{$.data.token}' | base64 --decode\n","type":"","command_line_args":"","exit_status":[],"script_type":"sh"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"AdminVM_GKE_Configure_CloudConsole_runbook","main_task_local_reference":{"kind":"app_task","name":"AdminVM_GKE_Configure_CloudConsole_dag"},"variable_list":[]},"name":"GKE_Configure_CloudConsole"},{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Install_Docker"}],"name":"AdminVM_Centos_Install_Docker_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Install_Docker","attrs":{"script":"# Eject cloud-init\neject\n\n# Setting SELinux to permissive\nsudo setenforce 0\nsudo sed -i 's\/SELINUX=enforcing\/SELINUX=permissive\/g' \/etc\/selinux\/config\n\nsudo sestatus | grep \"Current mode\"\n\n# Disabling firewalld\nsudo systemctl stop firewalld\nsudo systemctl disable firewalld\n\n# Remove any previous Docker version\nsudo dnf remove docker \\\n  docker-client \\\n  docker-client-latest \\\n  docker-common \\\n  docker-latest \\\n  docker-latest-logrotate \\\n  docker-logrotate \\\n  docker-engine\n\n# Install iptables but disable it (https:\/\/github.com\/moby\/moby\/issues\/41799 & https:\/\/cloud.google.com\/compute\/docs\/troubleshooting\/known-issues)\nsudo dnf install -y iptables-services\nsudo chkconfig iptables off\n\n# Install iSCSI and NFS CentOS packages for Nutanix Volumes and Files CSI support\nsudo dnf install -y iscsi-initiator-utils nfs-utils\nsudo systemctl enable iscsid\nsudo systemctl start iscsid\n\n# Install Docker 19.03+\nsudo dnf install -y yum-utils\nsudo yum-config-manager \\\n    --add-repo \\\n    https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nsudo dnf install -y docker-ce docker-ce-cli containerd.io\nsudo systemctl enable docker\nsudo systemctl start docker\n\n# Verify you are now running version 19.03+\nsudo docker version\n\n# Add your user to the docker group\nsudo usermod -aG docker $USER\n\n# Change default cgroup driver to systemd\ncat <<EOF | sudo tee \/etc\/docker\/daemon.json\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"100m\"\n  },\n  \"storage-driver\": \"overlay2\",\n  \"storage-opts\": [\n    \"overlay2.override_kernel_check=true\"\n  ]\n}\nEOF\n\nsudo systemctl restart docker\nsudo docker info | grep -i cgroup\n","type":"","command_line_args":"","exit_status":[],"script_type":"sh"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"AdminVM_Centos_Install_Docker_runbook","main_task_local_reference":{"kind":"app_task","name":"AdminVM_Centos_Install_Docker_dag"},"variable_list":[]},"name":"Centos_Install_Docker"},{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Extend_OS_Disk"}],"name":"AdminVM_NTNXPC_Extend_Disk_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Extend_OS_Disk","attrs":{"script":"jwt = '@@{calm_jwt}@@'\nvmUuid = '@@{id}@@'\ndiskSize = @@{OS_DISK_SIZE}@@ # GB\n\n# ============== DO NO CHANGE AFTER THIS ===============\n\n# Get VM\napi_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/vms\/{}'.format(vmUuid)\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\nr = urlreq(api_url, verb='GET', headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\n# Power off VM and extend disk\ndel resp['status']\n\ndisk_size_mib = diskSize * 1024\ndisk_size_bytes = disk_size_mib * 1024**2\n\nresp['spec']['resources']['disk_list'][0]['disk_size_mib'] = disk_size_mib\nresp['spec']['resources']['disk_list'][0]['disk_size_bytes'] = disk_size_bytes\nresp['spec']['resources']['power_state'] = 'OFF'\n\npayload = resp\n\nr = urlreq(api_url, verb='PUT', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    taskUuid = resp['status']['execution_context']['task_uuid']\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\n\n# Monitor task\nstate = \"\"\nwhile state != \"SUCCEEDED\":\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/tasks\/{}'.format(taskUuid)\n\n    sleep(2)\n    r = urlreq(api_url, verb='GET', headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        state = resp['status']\n        if state == \"FAILED\":\n            print(\"Task failed\", resp['progress_message'])\n            exit(1)\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\n# Wait for VM to power off\napi_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/vms\/{}'.format(vmUuid)\nr = urlreq(api_url, verb='GET', headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    power_state = resp['status']['resources']['power_state']\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\nstate = \"\"\nwhile state != \"OFF\":\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/vms\/{}'.format(vmUuid)\n\n    sleep(2)\n    r = urlreq(api_url, verb='GET', headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        state = resp['status']['resources']['power_state']\n        if state == \"FAILED\":\n            print(\"Task failed\", resp['progress_message'])\n            exit(1)\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\n# Power on VM\ndel resp['status']\n\nresp['spec']['resources']['power_state'] = 'ON'\n\napi_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/vms\/{}'.format(vmUuid)\npayload = resp\n\nr = urlreq(api_url, verb='PUT', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    taskUuid = resp['status']['execution_context']['task_uuid']\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\n# Monitor task\nstate = \"\"\nwhile state != \"SUCCEEDED\":\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/tasks\/{}'.format(taskUuid)\n\n    sleep(2)\n    r = urlreq(api_url, verb='GET', headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        state = resp['status']\n        if state == \"FAILED\":\n            print(\"Task failed\", resp['progress_message'])\n            exit(1)\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\nprint(\"OS disk extended to {} GB\".format(diskSize))\n\n# Wait until VM boots\nsleep(60)\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"AdminVM_NTNXPC_Extend_Disk_runbook","main_task_local_reference":{"kind":"app_task","name":"AdminVM_NTNXPC_Extend_Disk_dag"},"variable_list":[]},"name":"NTNXPC_Extend_Disk"}],"depends_on_list":[{"kind":"app_blueprint_deployment","name":"ControlPlaneVMs_Deployment"},{"kind":"app_blueprint_deployment","name":"WorkerNodesVMs_Deployment"}],"name":"AdminVM","port_list":[],"tier":"","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"GCP_PROJECT_ID","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"GCP_KEY","value":"","label":"","attrs":{"type":""},"is_hidden":true},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"KUBECONFIG","value":"","label":"","attrs":{"type":""},"is_hidden":false}],"description":"Admin VM"},{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"ControlPlaneVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"ControlPlaneVMs___create___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"ControlPlaneVMs___create___runbook","main_task_local_reference":{"kind":"app_task","name":"ControlPlaneVMs___create___dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for starting an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"ControlPlaneVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"ControlPlaneVMs___start___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"ControlPlaneVMs___start___runbook","main_task_local_reference":{"kind":"app_task","name":"ControlPlaneVMs___start___dag"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"ControlPlaneVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"ControlPlaneVMs___stop___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"ControlPlaneVMs___stop___runbook","main_task_local_reference":{"kind":"app_task","name":"ControlPlaneVMs___stop___dag"},"variable_list":[]},"name":"action_stop"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"ControlPlaneVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"ControlPlaneVMs___delete___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"ControlPlaneVMs___delete___runbook","main_task_local_reference":{"kind":"app_task","name":"ControlPlaneVMs___delete___dag"},"variable_list":[]},"name":"action_delete"},{"description":"System action for restarting an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"ControlPlaneVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"ControlPlaneVMs___restart___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"ControlPlaneVMs___restart___runbook","main_task_local_reference":{"kind":"app_task","name":"ControlPlaneVMs___restart___dag"},"variable_list":[]},"name":"action_restart"},{"description":"System action for deleting an application. Does not delete created VMs","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"ControlPlaneVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"ControlPlaneVMs___soft_delete___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"ControlPlaneVMs___soft_delete___runbook","main_task_local_reference":{"kind":"app_task","name":"ControlPlaneVMs___soft_delete___dag"},"variable_list":[]},"name":"action_soft_delete"},{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"ControlPlaneVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Install_Docker"}],"name":"ControlPlaneVMs_Centos_Install_Docker_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"ControlPlaneVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Install_Docker","attrs":{"script":"# Eject cloud-init\neject\n\n# Setting SELinux to permissive\nsudo setenforce 0\nsudo sed -i 's\/SELINUX=enforcing\/SELINUX=permissive\/g' \/etc\/selinux\/config\n\nsudo sestatus | grep \"Current mode\"\n\n# Disabling firewalld\nsudo systemctl stop firewalld\nsudo systemctl disable firewalld\n\n# Remove any previous Docker version\nsudo dnf remove docker \\\n  docker-client \\\n  docker-client-latest \\\n  docker-common \\\n  docker-latest \\\n  docker-latest-logrotate \\\n  docker-logrotate \\\n  docker-engine\n\n# Install iptables but disable it (https:\/\/github.com\/moby\/moby\/issues\/41799 & https:\/\/cloud.google.com\/compute\/docs\/troubleshooting\/known-issues)\nsudo dnf install -y iptables-services\nsudo chkconfig iptables off\n\n# Install iSCSI and NFS CentOS packages for Nutanix Volumes and Files CSI support\nsudo dnf install -y iscsi-initiator-utils nfs-utils\nsudo systemctl enable iscsid\nsudo systemctl start iscsid\n\n# Install Docker 19.03+\nsudo dnf install -y yum-utils\nsudo yum-config-manager \\\n    --add-repo \\\n    https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nsudo dnf install -y docker-ce docker-ce-cli containerd.io\nsudo systemctl enable docker\nsudo systemctl start docker\n\n# Verify you are now running version 19.03+\nsudo docker version\n\n# Add your user to the docker group\nsudo usermod -aG docker $USER\n\n# Change default cgroup driver to systemd\ncat <<EOF | sudo tee \/etc\/docker\/daemon.json\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"100m\"\n  },\n  \"storage-driver\": \"overlay2\",\n  \"storage-opts\": [\n    \"overlay2.override_kernel_check=true\"\n  ]\n}\nEOF\n\nsudo systemctl restart docker\nsudo docker info | grep -i cgroup\n","type":"","command_line_args":"","exit_status":[],"script_type":"sh"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"ControlPlaneVMs_Centos_Install_Docker_runbook","main_task_local_reference":{"kind":"app_task","name":"ControlPlaneVMs_Centos_Install_Docker_dag"},"variable_list":[]},"name":"Centos_Install_Docker"},{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"ControlPlaneVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Extend_OS_Disk"}],"name":"ControlPlaneVMs_NTNXPC_Extend_Disk_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"ControlPlaneVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Extend_OS_Disk","attrs":{"script":"jwt = '@@{calm_jwt}@@'\nvmUuid = '@@{id}@@'\ndiskSize = @@{OS_DISK_SIZE}@@ # GB\n\n# ============== DO NO CHANGE AFTER THIS ===============\n\n# Get VM\napi_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/vms\/{}'.format(vmUuid)\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\nr = urlreq(api_url, verb='GET', headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\n# Power off VM and extend disk\ndel resp['status']\n\ndisk_size_mib = diskSize * 1024\ndisk_size_bytes = disk_size_mib * 1024**2\n\nresp['spec']['resources']['disk_list'][0]['disk_size_mib'] = disk_size_mib\nresp['spec']['resources']['disk_list'][0]['disk_size_bytes'] = disk_size_bytes\nresp['spec']['resources']['power_state'] = 'OFF'\n\npayload = resp\n\nr = urlreq(api_url, verb='PUT', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    taskUuid = resp['status']['execution_context']['task_uuid']\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\n\n# Monitor task\nstate = \"\"\nwhile state != \"SUCCEEDED\":\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/tasks\/{}'.format(taskUuid)\n\n    sleep(2)\n    r = urlreq(api_url, verb='GET', headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        state = resp['status']\n        if state == \"FAILED\":\n            print(\"Task failed\", resp['progress_message'])\n            exit(1)\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\n# Wait for VM to power off\napi_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/vms\/{}'.format(vmUuid)\nr = urlreq(api_url, verb='GET', headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    power_state = resp['status']['resources']['power_state']\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\nstate = \"\"\nwhile state != \"OFF\":\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/vms\/{}'.format(vmUuid)\n\n    sleep(2)\n    r = urlreq(api_url, verb='GET', headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        state = resp['status']['resources']['power_state']\n        if state == \"FAILED\":\n            print(\"Task failed\", resp['progress_message'])\n            exit(1)\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\n# Power on VM\ndel resp['status']\n\nresp['spec']['resources']['power_state'] = 'ON'\n\napi_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/vms\/{}'.format(vmUuid)\npayload = resp\n\nr = urlreq(api_url, verb='PUT', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    taskUuid = resp['status']['execution_context']['task_uuid']\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\n# Monitor task\nstate = \"\"\nwhile state != \"SUCCEEDED\":\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/tasks\/{}'.format(taskUuid)\n\n    sleep(2)\n    r = urlreq(api_url, verb='GET', headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        state = resp['status']\n        if state == \"FAILED\":\n            print(\"Task failed\", resp['progress_message'])\n            exit(1)\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\nprint(\"OS disk extended to {} GB\".format(diskSize))\n\n# Wait until VM boots\nsleep(60)\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"ControlPlaneVMs_NTNXPC_Extend_Disk_runbook","main_task_local_reference":{"kind":"app_task","name":"ControlPlaneVMs_NTNXPC_Extend_Disk_dag"},"variable_list":[]},"name":"NTNXPC_Extend_Disk"}],"depends_on_list":[],"name":"ControlPlaneVMs","port_list":[],"tier":"","variable_list":[],"description":"Control Plane VMs"},{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"WorkerNodesVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"WorkerNodesVMs___create___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"WorkerNodesVMs___create___runbook","main_task_local_reference":{"kind":"app_task","name":"WorkerNodesVMs___create___dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for starting an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"WorkerNodesVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"WorkerNodesVMs___start___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"WorkerNodesVMs___start___runbook","main_task_local_reference":{"kind":"app_task","name":"WorkerNodesVMs___start___dag"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"WorkerNodesVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"WorkerNodesVMs___stop___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"WorkerNodesVMs___stop___runbook","main_task_local_reference":{"kind":"app_task","name":"WorkerNodesVMs___stop___dag"},"variable_list":[]},"name":"action_stop"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"WorkerNodesVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"WorkerNodesVMs___delete___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"WorkerNodesVMs___delete___runbook","main_task_local_reference":{"kind":"app_task","name":"WorkerNodesVMs___delete___dag"},"variable_list":[]},"name":"action_delete"},{"description":"System action for restarting an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"WorkerNodesVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"WorkerNodesVMs___restart___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"WorkerNodesVMs___restart___runbook","main_task_local_reference":{"kind":"app_task","name":"WorkerNodesVMs___restart___dag"},"variable_list":[]},"name":"action_restart"},{"description":"System action for deleting an application. Does not delete created VMs","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"WorkerNodesVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"WorkerNodesVMs___soft_delete___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"WorkerNodesVMs___soft_delete___runbook","main_task_local_reference":{"kind":"app_task","name":"WorkerNodesVMs___soft_delete___dag"},"variable_list":[]},"name":"action_soft_delete"},{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"WorkerNodesVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Install_Docker"}],"name":"WorkerNodesVMs_Centos_Install_Docker_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"WorkerNodesVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Install_Docker","attrs":{"script":"# Eject cloud-init\neject\n\n# Setting SELinux to permissive\nsudo setenforce 0\nsudo sed -i 's\/SELINUX=enforcing\/SELINUX=permissive\/g' \/etc\/selinux\/config\n\nsudo sestatus | grep \"Current mode\"\n\n# Disabling firewalld\nsudo systemctl stop firewalld\nsudo systemctl disable firewalld\n\n# Remove any previous Docker version\nsudo dnf remove docker \\\n  docker-client \\\n  docker-client-latest \\\n  docker-common \\\n  docker-latest \\\n  docker-latest-logrotate \\\n  docker-logrotate \\\n  docker-engine\n\n# Install iptables but disable it (https:\/\/github.com\/moby\/moby\/issues\/41799 & https:\/\/cloud.google.com\/compute\/docs\/troubleshooting\/known-issues)\nsudo dnf install -y iptables-services\nsudo chkconfig iptables off\n\n# Install iSCSI and NFS CentOS packages for Nutanix Volumes and Files CSI support\nsudo dnf install -y iscsi-initiator-utils nfs-utils\nsudo systemctl enable iscsid\nsudo systemctl start iscsid\n\n# Install Docker 19.03+\nsudo dnf install -y yum-utils\nsudo yum-config-manager \\\n    --add-repo \\\n    https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nsudo dnf install -y docker-ce docker-ce-cli containerd.io\nsudo systemctl enable docker\nsudo systemctl start docker\n\n# Verify you are now running version 19.03+\nsudo docker version\n\n# Add your user to the docker group\nsudo usermod -aG docker $USER\n\n# Change default cgroup driver to systemd\ncat <<EOF | sudo tee \/etc\/docker\/daemon.json\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"100m\"\n  },\n  \"storage-driver\": \"overlay2\",\n  \"storage-opts\": [\n    \"overlay2.override_kernel_check=true\"\n  ]\n}\nEOF\n\nsudo systemctl restart docker\nsudo docker info | grep -i cgroup\n","type":"","command_line_args":"","exit_status":[],"script_type":"sh"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"WorkerNodesVMs_Centos_Install_Docker_runbook","main_task_local_reference":{"kind":"app_task","name":"WorkerNodesVMs_Centos_Install_Docker_dag"},"variable_list":[]},"name":"Centos_Install_Docker"},{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"WorkerNodesVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Extend_OS_Disk"}],"name":"WorkerNodesVMs_NTNXPC_Extend_Disk_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"WorkerNodesVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Extend_OS_Disk","attrs":{"script":"jwt = '@@{calm_jwt}@@'\nvmUuid = '@@{id}@@'\ndiskSize = @@{OS_DISK_SIZE}@@ # GB\n\n# ============== DO NO CHANGE AFTER THIS ===============\n\n# Get VM\napi_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/vms\/{}'.format(vmUuid)\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\nr = urlreq(api_url, verb='GET', headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\n# Power off VM and extend disk\ndel resp['status']\n\ndisk_size_mib = diskSize * 1024\ndisk_size_bytes = disk_size_mib * 1024**2\n\nresp['spec']['resources']['disk_list'][0]['disk_size_mib'] = disk_size_mib\nresp['spec']['resources']['disk_list'][0]['disk_size_bytes'] = disk_size_bytes\nresp['spec']['resources']['power_state'] = 'OFF'\n\npayload = resp\n\nr = urlreq(api_url, verb='PUT', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    taskUuid = resp['status']['execution_context']['task_uuid']\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\n\n# Monitor task\nstate = \"\"\nwhile state != \"SUCCEEDED\":\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/tasks\/{}'.format(taskUuid)\n\n    sleep(2)\n    r = urlreq(api_url, verb='GET', headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        state = resp['status']\n        if state == \"FAILED\":\n            print(\"Task failed\", resp['progress_message'])\n            exit(1)\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\n# Wait for VM to power off\napi_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/vms\/{}'.format(vmUuid)\nr = urlreq(api_url, verb='GET', headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    power_state = resp['status']['resources']['power_state']\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\nstate = \"\"\nwhile state != \"OFF\":\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/vms\/{}'.format(vmUuid)\n\n    sleep(2)\n    r = urlreq(api_url, verb='GET', headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        state = resp['status']['resources']['power_state']\n        if state == \"FAILED\":\n            print(\"Task failed\", resp['progress_message'])\n            exit(1)\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\n# Power on VM\ndel resp['status']\n\nresp['spec']['resources']['power_state'] = 'ON'\n\napi_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/vms\/{}'.format(vmUuid)\npayload = resp\n\nr = urlreq(api_url, verb='PUT', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    taskUuid = resp['status']['execution_context']['task_uuid']\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\n# Monitor task\nstate = \"\"\nwhile state != \"SUCCEEDED\":\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/tasks\/{}'.format(taskUuid)\n\n    sleep(2)\n    r = urlreq(api_url, verb='GET', headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        state = resp['status']\n        if state == \"FAILED\":\n            print(\"Task failed\", resp['progress_message'])\n            exit(1)\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\nprint(\"OS disk extended to {} GB\".format(diskSize))\n\n# Wait until VM boots\nsleep(60)\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"WorkerNodesVMs_NTNXPC_Extend_Disk_runbook","main_task_local_reference":{"kind":"app_task","name":"WorkerNodesVMs_NTNXPC_Extend_Disk_dag"},"variable_list":[]},"name":"NTNXPC_Extend_Disk"}],"depends_on_list":[],"name":"WorkerNodesVMs","port_list":[],"tier":"","variable_list":[],"description":"Worker Nodes VMs"}],"substrate_definition_list":[{"description":"","action_list":[],"type":"AHV_VM","name":"AdminVM_Substrate","readiness_probe":{"connection_type":"SSH","retries":"5","connection_protocol":"","connection_port":22,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"60","disable_readiness_probe":false,"login_credential_local_reference":{"kind":"app_credential","name":"CRED_OS"}},"os_type":"Linux","create_spec":{"name":"@@{ANTHOS_CLUSTER_NAME}@@-anthos-adminVm-@@{calm_array_index}@@","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","ip_endpoint_list":[],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"dnd-demo","uuid":"92b02b9e-b316-4503-94fb-a90bf3fede8b"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":4,"gpu_list":[],"memory_size_mib":32768,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":{"meta_data":"","type":"","user_data":"#cloud-config\nhostname: @@{name}@@\nusers:\n    - name: @@{CRED_OS.username}@@\n      ssh-authorized-keys:\n        - @@{CRED_OS.public_key}@@\n      sudo: ['ALL=(ALL) NOPASSWD:ALL']\nruncmd:\n    - yum -y install lvm2\n#    - [eject]"},"type":"","sysprep":null},"power_state":"ON","type":"","account_uuid":"07d7bfd2-dab5-4562-b760-2d2eeccc7d98","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"PCI"}},"type":"","boot_type":"","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"app_package","type":"","name":"AHV_CENTOS","uuid":"daab9324-05ea-49ba-8f10-805f9a48f922"},"type":"","disk_size_mib":131072,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"PCI"},"device_type":"DISK"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":null,"categories":""},"variable_list":[]},{"description":"","action_list":[],"type":"AHV_VM","name":"ControlPlaneVMs_Substrate","readiness_probe":{"connection_type":"SSH","retries":"5","connection_protocol":"","connection_port":22,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"60","disable_readiness_probe":false,"login_credential_local_reference":{"kind":"app_credential","name":"CRED_OS"}},"os_type":"Linux","create_spec":{"name":"@@{ANTHOS_CLUSTER_NAME}@@-anthos-controlVm-@@{calm_array_index}@@","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","ip_endpoint_list":[],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"dnd-demo","uuid":"92b02b9e-b316-4503-94fb-a90bf3fede8b"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":4,"gpu_list":[],"memory_size_mib":32768,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":{"meta_data":"","type":"","user_data":"#cloud-config\nhostname: @@{name}@@\nusers:\n    - name: @@{CRED_OS.username}@@\n      ssh-authorized-keys:\n        - @@{CRED_OS.public_key}@@\n      sudo: ['ALL=(ALL) NOPASSWD:ALL']\nruncmd:\n    - yum -y install lvm2\n#    - [eject]"},"type":"","sysprep":null},"power_state":"ON","type":"","account_uuid":"07d7bfd2-dab5-4562-b760-2d2eeccc7d98","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"PCI"}},"type":"","boot_type":"","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"app_package","type":"","name":"AHV_CENTOS","uuid":"daab9324-05ea-49ba-8f10-805f9a48f922"},"type":"","disk_size_mib":131072,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"PCI"},"device_type":"DISK"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":null,"categories":""},"variable_list":[]},{"description":"","action_list":[],"type":"AHV_VM","name":"WorkerNodesVMs_Substrate","readiness_probe":{"connection_type":"SSH","retries":"5","connection_protocol":"","connection_port":22,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"60","disable_readiness_probe":false,"login_credential_local_reference":{"kind":"app_credential","name":"CRED_OS"}},"os_type":"Linux","create_spec":{"name":"@@{ANTHOS_CLUSTER_NAME}@@-anthos-workerVm-@@{calm_array_index}@@","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","ip_endpoint_list":[],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"dnd-demo","uuid":"92b02b9e-b316-4503-94fb-a90bf3fede8b"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":4,"gpu_list":[],"memory_size_mib":32768,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":{"meta_data":"","type":"","user_data":"#cloud-config\nhostname: @@{name}@@\nusers:\n    - name: @@{CRED_OS.username}@@\n      ssh-authorized-keys:\n        - @@{CRED_OS.public_key}@@\n      sudo: ['ALL=(ALL) NOPASSWD:ALL']\nruncmd:\n    - yum -y install lvm2\n#    - [eject]"},"type":"","sysprep":null},"power_state":"ON","type":"","account_uuid":"07d7bfd2-dab5-4562-b760-2d2eeccc7d98","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"PCI"}},"type":"","boot_type":"","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"app_package","type":"","name":"AHV_CENTOS","uuid":"daab9324-05ea-49ba-8f10-805f9a48f922"},"type":"","disk_size_mib":131072,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"PCI"},"device_type":"DISK"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":null,"categories":""},"variable_list":[]}],"credential_definition_list":[{"username":"nutanix","description":"","type":"KEY","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"CRED_OS"},{"username":"anthos_service_account_here","description":"","type":"KEY","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"CRED_GCLOUD"}],"package_definition_list":[{"description":"","action_list":[],"type":"CUSTOM","service_local_reference_list":[{"kind":"app_service","name":"AdminVM"}],"name":"AdminVM_Package","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"NTNXPC_Extend_Disk"},{"kind":"app_task","name":"Centos_Install_Docker"},{"kind":"app_task","name":"Gcloud_Install_SDK"},{"kind":"app_task","name":"Anthos_Install_CLI"}],"name":"AdminVM_Package___install___dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"NTNXPC_Extend_Disk"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Centos_Install_Docker"}},{"from_task_reference":{"kind":"app_task","name":"Centos_Install_Docker"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Gcloud_Install_SDK"}},{"from_task_reference":{"kind":"app_task","name":"Gcloud_Install_SDK"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Anthos_Install_CLI"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"NTNXPC_Extend_Disk","attrs":{"type":"","inarg_list":[],"runbook_reference":{"kind":"app_runbook","name":"AdminVM_NTNXPC_Extend_Disk_runbook"}},"timeout_secs":"0","type":"CALL_RUNBOOK","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Centos_Install_Docker","attrs":{"type":"","inarg_list":[],"runbook_reference":{"kind":"app_runbook","name":"AdminVM_Centos_Install_Docker_runbook"}},"timeout_secs":"0","type":"CALL_RUNBOOK","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Gcloud_Install_SDK","attrs":{"type":"","inarg_list":[],"runbook_reference":{"kind":"app_runbook","name":"AdminVM_Gcloud_Install_SDK_runbook"}},"timeout_secs":"0","type":"CALL_RUNBOOK","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Anthos_Install_CLI","attrs":{"type":"","inarg_list":[],"runbook_reference":{"kind":"app_runbook","name":"AdminVM_Anthos_Install_CLI_runbook"}},"timeout_secs":"0","type":"CALL_RUNBOOK","variable_list":[]}],"description":"","name":"AdminVM_Package___install___runbook","main_task_local_reference":{"kind":"app_task","name":"AdminVM_Package___install___dag"},"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AdminVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"DAG_Task_for_Package_AdminVM_Package_action_uninstall","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Runbook_for_Package_AdminVM_Package_action_uninstall","main_task_local_reference":{"kind":"app_task","name":"DAG_Task_for_Package_AdminVM_Package_action_uninstall"},"variable_list":[]}},"variable_list":[]},{"description":"","action_list":[],"type":"CUSTOM","service_local_reference_list":[{"kind":"app_service","name":"ControlPlaneVMs"}],"name":"ControlPlaneVMs_Package","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"ControlPlaneVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"NTNXPC_Extend_Disk"},{"kind":"app_task","name":"Centos_Install_Docker"}],"name":"ControlPlaneVMs_Package___install___dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"NTNXPC_Extend_Disk"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Centos_Install_Docker"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"ControlPlaneVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"NTNXPC_Extend_Disk","attrs":{"type":"","inarg_list":[],"runbook_reference":{"kind":"app_runbook","name":"ControlPlaneVMs_NTNXPC_Extend_Disk_runbook"}},"timeout_secs":"0","type":"CALL_RUNBOOK","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"ControlPlaneVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Centos_Install_Docker","attrs":{"type":"","inarg_list":[],"runbook_reference":{"kind":"app_runbook","name":"ControlPlaneVMs_Centos_Install_Docker_runbook"}},"timeout_secs":"0","type":"CALL_RUNBOOK","variable_list":[]}],"description":"","name":"ControlPlaneVMs_Package___install___runbook","main_task_local_reference":{"kind":"app_task","name":"ControlPlaneVMs_Package___install___dag"},"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"ControlPlaneVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"DAG_Task_for_Package_ControlPlaneVMs_Package_action_uninstall","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Runbook_for_Package_ControlPlaneVMs_Package_action_uninstall","main_task_local_reference":{"kind":"app_task","name":"DAG_Task_for_Package_ControlPlaneVMs_Package_action_uninstall"},"variable_list":[]}},"variable_list":[]},{"description":"","action_list":[],"type":"CUSTOM","service_local_reference_list":[{"kind":"app_service","name":"WorkerNodesVMs"}],"name":"WorkerNodesVMs_Package","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"WorkerNodesVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"NTNXPC_Extend_Disk"},{"kind":"app_task","name":"Centos_Install_Docker"}],"name":"WorkerNodesVMs_Package___install___dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"NTNXPC_Extend_Disk"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Centos_Install_Docker"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"WorkerNodesVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"NTNXPC_Extend_Disk","attrs":{"type":"","inarg_list":[],"runbook_reference":{"kind":"app_runbook","name":"WorkerNodesVMs_NTNXPC_Extend_Disk_runbook"}},"timeout_secs":"0","type":"CALL_RUNBOOK","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"WorkerNodesVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Centos_Install_Docker","attrs":{"type":"","inarg_list":[],"runbook_reference":{"kind":"app_runbook","name":"WorkerNodesVMs_Centos_Install_Docker_runbook"}},"timeout_secs":"0","type":"CALL_RUNBOOK","variable_list":[]}],"description":"","name":"WorkerNodesVMs_Package___install___runbook","main_task_local_reference":{"kind":"app_task","name":"WorkerNodesVMs_Package___install___dag"},"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"WorkerNodesVMs"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"DAG_Task_for_Package_WorkerNodesVMs_Package_action_uninstall","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Runbook_for_Package_WorkerNodesVMs_Package_action_uninstall","main_task_local_reference":{"kind":"app_task","name":"DAG_Task_for_Package_WorkerNodesVMs_Package_action_uninstall"},"variable_list":[]}},"variable_list":[]},{"description":"","action_list":[],"type":"SUBSTRATE_IMAGE","service_local_reference_list":[],"name":"AHV_CENTOS","version":"","options":{"type":"","name":"AHV_CENTOS_82","resources":{"image_type":"DISK_IMAGE","checksum":{"checksum_algorithm":"","type":"","checksum_value":""},"source_uri":"https:\/\/cloud.centos.org\/centos\/8\/x86_64\/images\/CentOS-8-GenericCloud-8.2.2004-20200611.2.x86_64.qcow2","version":{"product_version":"8.2.2004-20200611.2","type":"","product_name":"AHV_CENTOS_82"},"architecture":"X86_64","type":""},"description":""},"variable_list":[]}],"app_profile_list":[{"deployment_create_list":[{"type":"GREENFIELD","action_list":[],"name":"AdminVM_Deployment","min_replicas":"1","default_replicas":"","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"AdminVM_Package"}],"substrate_local_reference":{"kind":"app_substrate","name":"AdminVM_Substrate"},"options":{"type":""},"variable_list":[],"description":""},{"type":"GREENFIELD","action_list":[],"name":"ControlPlaneVMs_Deployment","min_replicas":"3","default_replicas":"","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"3","package_local_reference_list":[{"kind":"app_package","name":"ControlPlaneVMs_Package"}],"substrate_local_reference":{"kind":"app_substrate","name":"ControlPlaneVMs_Substrate"},"options":{"type":""},"variable_list":[],"description":""},{"type":"GREENFIELD","action_list":[],"name":"WorkerNodesVMs_Deployment","min_replicas":"2","default_replicas":"","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"99","package_local_reference_list":[{"kind":"app_package","name":"WorkerNodesVMs_Package"}],"substrate_local_reference":{"kind":"app_substrate","name":"WorkerNodesVMs_Substrate"},"options":{"type":""},"variable_list":[],"description":""}],"environment_reference_list":[],"description":"","action_list":[],"name":"Default","variable_list":[{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"ANTHOS_CLUSTER_NAME","value":"","label":"Anthos cluster name","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"This is the IP address for Kubernetes API. Format: XXX.XXX.XXX.XXX","data_type":"BASE","type":"LOCAL","name":"ANTHOS_CONTROLPLANE_VIP","value":"192.168.4.2","label":"Anthos cluster VIP","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"This is the network for your pods. Preferably do not overlap with other networks. \n            CIDR format: XXX.XXX.XXX.XXX\/XX","data_type":"BASE","type":"LOCAL","name":"ANTHOS_PODS_NETWORK","value":"172.30.0.0\/16","label":"Anthos Kubernetes pods network","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"This is the network for your services. Preferably do not overlap with other networks. \n            CIDR format: XXX.XXX.XXX.XXX\/XX","data_type":"BASE","type":"LOCAL","name":"ANTHOS_SERVICES_NETWORK","value":"172.31.0.0\/16","label":"Anthos Kubernetes services network","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"This is the IP address for Kubernetes Ingress. \n            This address MUST be within the load balancing pool. Format: XXX.XXX.XXX.XXX","data_type":"BASE","type":"LOCAL","name":"ANTHOS_INGRESS_VIP","value":"192.168.4.3","label":"Anthos Kubernetes Ingress VIP","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"This is the IP address range for Load Balancing. Format: XXX.XXX.XXX.XXX-YYY.YYY.YYY.YYY","data_type":"BASE","type":"LOCAL","name":"ANTHOS_LB_ADDRESSPOOL","value":"192.168.4.3-192.168.4.5","label":"Anthos Load Balancing pool","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"\n            This K8s SA is for Google Cloud Console so the K8s cluster can be managed in GKE. \n            This service account will have cluster-admin role for Google Cloud Marketplace to work. \n            Default: google-cloud-console","data_type":"BASE","type":"LOCAL","name":"KUBERNETES_SERVICE_ACCOUNT","value":"google-cloud-console","label":"Kubernetes SA Cloud Console","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"regex":{"should_validate":false,"value":"^[\\d]*$"},"val_type":"INT","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"OS_DISK_SIZE","value":"128","label":"OS disk size","attrs":{"type":""},"is_hidden":true},{"val_type":"STRING","is_mandatory":false,"description":"This script is hosted externally and produce an Anthos configuration file for cluster creation with user provided inputs during launch","data_type":"BASE","type":"LOCAL","name":"PYTHON_ANTHOS_GENCONFIG","value":"https:\/\/raw.githubusercontent.com\/pipoe2h\/calm-dsl\/anthos-on-ahv\/blueprints\/anthos-on-ahv\/scripts\/anthos_generate_config.py","label":"Python Parser URL","attrs":{"type":""},"is_hidden":true}]}],"published_service_definition_list":[],"default_credential_local_reference":{"kind":"app_credential","name":"CRED_OS"},"type":"USER"},"name":"Anthos_on_AHV"},"api_version":"3.0","metadata":{"last_update_time":"1613590284604484","kind":"blueprint","spec_version":1,"creation_time":"1613590276192744","name":"Anthos_on_AHV"}}