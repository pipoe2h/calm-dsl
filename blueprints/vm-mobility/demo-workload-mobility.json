{"status":{},"contains_secrets":false,"product_version":"2.9.8.1","spec":{"description":"* [Repo](http:\/\/@@{ControlVM.address}@@:8080)","resources":{"client_attrs":{"ControlVM_Deployment":{"y":43.5714285714,"x":100}},"service_definition_list":[{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"ControlVM"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"GetVmNetworkTask"}],"name":"ControlVM___create___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"ControlVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"GetVmNetworkTask","attrs":{"exit_status":[],"script":"print(\"PROJECT_NETWORKUUID={}\".format(\"@@{platform.status.resources.nic_list[0].subnet_reference.uuid}@@\"))\nprint(\"PROJECT_NETWORK={}\".format(\"@@{platform.status.resources.nic_list[0].subnet_reference.name}@@\"))","eval_variables":["PROJECT_NETWORKUUID","PROJECT_NETWORK"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"ControlVM___create___runbook","main_task_local_reference":{"kind":"app_task","name":"ControlVM___create___dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"ControlVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"DAG_Task_for_Service_ControlVM_action_delete","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Runbook_for_Service_ControlVM_action_delete","main_task_local_reference":{"kind":"app_task","name":"DAG_Task_for_Service_ControlVM_action_delete"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"ControlVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"DAG_Task_for_Service_ControlVM_action_start","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Runbook_for_Service_ControlVM_action_start","main_task_local_reference":{"kind":"app_task","name":"DAG_Task_for_Service_ControlVM_action_start"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"ControlVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"DAG_Task_for_Service_ControlVM_action_stop","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Runbook_for_Service_ControlVM_action_stop","main_task_local_reference":{"kind":"app_task","name":"DAG_Task_for_Service_ControlVM_action_stop"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"ControlVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"DAG_Task_for_Service_ControlVM_action_restart","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Runbook_for_Service_ControlVM_action_restart","main_task_local_reference":{"kind":"app_task","name":"DAG_Task_for_Service_ControlVM_action_restart"},"variable_list":[]},"name":"action_restart"},{"description":"System action for deleting an application. Does not delete created VMs","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"ControlVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"DAG_Task_for_Service_ControlVM_action_soft_delete","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Runbook_for_Service_ControlVM_action_soft_delete","main_task_local_reference":{"kind":"app_task","name":"DAG_Task_for_Service_ControlVM_action_soft_delete"},"variable_list":[]},"name":"action_soft_delete"}],"depends_on_list":[],"name":"ControlVM","port_list":[],"tier":"","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"AWS_AMI_ID","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"AWS_SG_ID","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"AWS_VPC_ID","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"AWS_SUBNET_ID","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"MOVE_AWS_PROVIDERUUID","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"MOVE_AHV_PROVIDERUUID","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"MOVE_VAPP_IP","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"PC_IP","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"PE_UUID","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"SC_UUID","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"PROJECT_NETWORKUUID","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"PROJECT_NETWORK","value":"","label":"","attrs":{"type":""},"is_hidden":false}],"description":"Control VM for Launching Demo"}],"substrate_definition_list":[{"description":"","action_list":[{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"ControlVM_Substrate"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"GetPcTask"}],"name":"ControlVM_Substrate___pre_create___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"ControlVM_Substrate"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"GetPcTask","attrs":{"exit_status":[],"script":"jwt = '@@{calm_jwt}@@'\n\n# Get PC IP and PE uuid\napi_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/prism_central'\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\nr = urlreq(api_url, verb='GET', headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n\n    pc_ip = resp['resources']['pc_vm_list'][0]['nic_list'][0]['ip_list'][0]\n    pe_uuid= resp['resources']['pc_vm_list'][0]['cluster_reference']['uuid']\n    storage_container = resp['resources']['pc_vm_list'][0]['container_uuid']\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\nprint(\"PC_IP={}\".format(pc_ip))\nprint(\"PE_UUID={}\".format(pe_uuid))\nprint(\"SC_UUID={}\".format(storage_container))\n","eval_variables":["PC_IP","PE_UUID","SC_UUID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"ControlVM_Substrate___pre_create___runbook","main_task_local_reference":{"kind":"app_task","name":"ControlVM_Substrate___pre_create___dag"},"variable_list":[]},"name":"pre_action_create"}],"type":"AHV_VM","name":"ControlVM_Substrate","readiness_probe":{"connection_type":"SSH","retries":"5","connection_protocol":"","connection_port":22,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"60","disable_readiness_probe":false,"login_credential_local_reference":{"kind":"app_credential","name":"Cred_OS"}},"editables":{"create_spec":{"resources":{"nic_list":{},"serial_port_list":{}}}},"os_type":"Linux","create_spec":{"name":"demo-moveControlVm-@@{calm_random}@@","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","ip_endpoint_list":[],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"nutanix","uuid":"e28bce98-3eef-4be7-8df9-bf9726dccba2"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":2,"gpu_list":[],"memory_size_mib":2048,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":{"meta_data":"","type":"","user_data":"#cloud-config\nhostname: @@{name}@@\nusers:\n  - name: @@{Cred_OS.username}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']\nchpasswd:\n  list: |\n    @@{Cred_OS.username}@@:@@{Cred_OS.secret}@@\n  expire: False\nssh_pwauth: True"},"type":"","sysprep":null},"power_state":"ON","type":"","account_uuid":"4ad90864-dcc6-47d1-9dfb-9feede5927a5","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"}},"type":"","boot_type":"","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"app_package","type":"","name":"AHV_CENTOS_76","uuid":"a597ad71-2909-4a22-9167-f14337d2527c"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":null,"categories":""},"variable_list":[]}],"credential_definition_list":[{"username":"nutanix","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"Cred_OS"},{"username":"admin","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"Cred_PC"},{"username":"aws","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"Cred_AWS"}],"package_definition_list":[{"description":"","action_list":[],"type":"CUSTOM","service_local_reference_list":[{"kind":"app_service","name":"ControlVM"}],"name":"ControlVM_Package","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"ControlVM"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[{"kind":"app_task","name":"MoveDownloadTask"},{"kind":"app_task","name":"DockerInstallTask"},{"kind":"app_task","name":"DockerHttpInstallTask"},{"kind":"app_task","name":"CalmDslInstallTask"}],"name":"ControlVM_Package___install___dag","state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"MoveDownloadTask"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"DockerInstallTask"}},{"from_task_reference":{"kind":"app_task","name":"DockerInstallTask"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"DockerHttpInstallTask"}},{"from_task_reference":{"kind":"app_task","name":"DockerHttpInstallTask"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"CalmDslInstallTask"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"ControlVM"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"MoveDownloadTask","state":"ACTIVE","attrs":{"script":"MOVE_VER=\"@@{Move_Version}@@\"\nMOVE_PACKAGE=\"move-${MOVE_VER}.zip\"\nMOVE_TARBALL=\"http:\/\/download.nutanix.com\/NutanixMove\/${MOVE_VER}\/${MOVE_PACKAGE}\"\n\nsudo yum install -y wget unzip git\nwget -q -O $HOME\/${MOVE_PACKAGE} ${MOVE_TARBALL}\nmkdir -p $HOME\/www\nunzip $HOME\/${MOVE_PACKAGE} -d $HOME\/www\/move-${MOVE_VER}\nrm $HOME\/${MOVE_PACKAGE}","type":"","command_line_args":"","exit_status":[],"script_type":"sh"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"ControlVM"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"DockerInstallTask","state":"ACTIVE","attrs":{"script":"# Uninstall old versions\nsudo yum remove -y docker \\\n    docker-client \\\n    docker-client-latest \\\n    docker-common \\\n    docker-latest \\\n    docker-latest-logrotate \\\n    docker-logrotate \\\n    docker-engine\n\n# Set up the repository\nsudo yum install -y yum-utils\nsudo yum-config-manager \\\n    --add-repo \\\n    https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\n\n# Install the latest version of Docker Engine\nsudo yum install -y docker-ce docker-ce-cli containerd.io\n\n# Enable and start Docker\nsudo systemctl enable docker\nsudo systemctl start docker\n\n# Add current user to Docker\nsudo usermod -aG docker $USER","type":"","command_line_args":"","exit_status":[],"script_type":"sh"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"ControlVM"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"DockerHttpInstallTask","state":"ACTIVE","attrs":{"script":"# Start a Web server with the packages\ndocker run -dit --name webserver -p 8080:80 -v $HOME\/www\/:\/usr\/local\/apache2\/htdocs\/ httpd:2.4\n","type":"","command_line_args":"","exit_status":[],"script_type":"sh"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"ControlVM"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"CalmDslInstallTask","state":"ACTIVE","attrs":{"script":"PC_IP=\"@@{PC_IP}@@\"\nPC_ADMIN=\"@@{Cred_PC.username}@@\"\nPC_PASSWORD=@@{Cred_PC.secret}@@\nPROJECT=\"@@{calm_project_name}@@\"\n\ngit clone --single-branch --branch vm-mobility https:\/\/github.com\/pipoe2h\/calm-dsl.git\n\nmkdir -p $HOME\/config\/.calm\ndocker run --rm \\\n    -v $HOME\/config\/.calm:\/root\/.calm \\\n    ntnx\/calm-dsl \\\n    calm init dsl -i $PC_IP -P 9440 -u $PC_ADMIN -p $PC_PASSWORD -pj $PROJECT\n","type":"","command_line_args":"","exit_status":[],"script_type":"sh"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"ControlVM_Package___install___runbook","state":"ACTIVE","main_task_local_reference":{"kind":"app_task","name":"ControlVM_Package___install___dag"},"message_list":[],"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"ControlVM"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"DAG_Task_for_Package_ControlVM_Package_action_uninstall","state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Runbook_for_Package_ControlVM_Package_action_uninstall","state":"ACTIVE","main_task_local_reference":{"kind":"app_task","name":"DAG_Task_for_Package_ControlVM_Package_action_uninstall"},"message_list":[],"variable_list":[]}},"variable_list":[]},{"description":"","action_list":[],"type":"SUBSTRATE_IMAGE","service_local_reference_list":[],"name":"AHV_CENTOS_76","version":"","options":{"type":"","name":"AHV_CENTOS_76","resources":{"image_type":"DISK_IMAGE","checksum":{"checksum_algorithm":"","type":"","checksum_value":""},"source_uri":"https:\/\/cloud.centos.org\/centos\/7\/images\/CentOS-7-x86_64-GenericCloud-1804_02.qcow2","version":{"product_version":"1.0","type":"","product_name":"AHV_CENTOS_76"},"architecture":"X86_64","type":""},"description":""},"variable_list":[]}],"app_profile_list":[{"deployment_create_list":[{"type":"GREENFIELD","action_list":[],"name":"ControlVM_Deployment","min_replicas":"1","default_replicas":"1","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"ControlVM_Package"}],"substrate_local_reference":{"kind":"app_substrate","name":"ControlVM_Substrate"},"options":{"type":""},"variable_list":[],"description":""}],"description":"","action_list":[{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"MoveDeployTask"},{"kind":"app_task","name":"GetVmIpTask"},{"kind":"app_task","name":"MoveConfAwsProvTask"}],"name":"Default_First_Deploy_Move_dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"MoveDeployTask"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"GetVmIpTask"}},{"from_task_reference":{"kind":"app_task","name":"GetVmIpTask"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"MoveConfAwsProvTask"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"ControlVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"MoveDeployTask","attrs":{"script":"BP_DIR_PATH=\"calm-dsl\/blueprints\/vm-mobility\"\nMOVE_IMAGE_URL=\"http:\/\/@@{address}@@:8080\/move-@@{Move_Version}@@\/move-@@{Move_Version}@@.qcow2\"\nPROJECT_NETWORK=\"@@{PROJECT_NETWORK}@@\"\nMOVE_PASSWORD=@@{Cred_PC.secret}@@\n\n\ngit --work-tree $HOME\/calm-dsl\/ --git-dir calm-dsl\/.git pull\n\ndocker run --rm -it\\\n    -e MOVE_QCOW2_URL=$MOVE_IMAGE_URL \\\n    -e PROJECT_NETWORK=$PROJECT_NETWORK \\\n    -e CALMDSL_MOVE_PASSWORD=$MOVE_PASSWORD \\\n    -v $HOME\/config\/.calm:\/root\/.calm \\\n    -v $HOME\/$BP_DIR_PATH\/:\/root\/vm-mobility\/ ntnx\/calm-dsl \\\n    \/bin\/bash -c \" \\\n    calm create bp -n @@{calm_application_name}@@-bp-move-vApp \\\n    -f vm-mobility\/bps\/move-ahv-appliance.py --force \\\n    && calm launch bp -i \\\n    -a @@{calm_application_name}@@-app-move-vApp \\\n    @@{calm_application_name}@@-bp-move-vApp \\\n    && calm watch app @@{calm_application_name}@@-app-move-vApp\"\n","type":"","command_line_args":"","exit_status":[],"script_type":"sh"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"ControlVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"GetVmIpTask","attrs":{"exit_status":[],"script":"jwt = '@@{calm_jwt}@@'\nvm_name = '@@{calm_application_name}@@-app-move-vApp'\n\n### Get VM\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\nuri = 'https:\/\/localhost:9440\/api\/nutanix\/v3'\naction = 'search'\n\napi_url = \"\/\".join([uri, action])\n\npayload = {\n    \"user_query\": \"\\\"Vm Name\\\"={}\".format(vm_name),\n    \"explicit_query\": True,\n    \"generate_autocompletions_only\": True,\n    \"query_term_list\": []\n}\n\nr = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    vm_uuid = resp['query_term_list'][0]['token_list'][0]['identifier']['value']\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\n### Get VM IP Address\naction = 'vms'\n\napi_url = \"\/\".join([uri, action, vm_uuid])\n\nr = urlreq(api_url, verb='GET', headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    vm_ip = resp['status']['resources']['nic_list'][0]['ip_endpoint_list'][0]['ip']\n    print(\"MOVE_VAPP_IP={}\".format(vm_ip))\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n","eval_variables":["MOVE_VAPP_IP"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"ControlVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"MoveConfAwsProvTask","attrs":{"exit_status":[],"script":"move_ip = '@@{MOVE_VAPP_IP}@@'\nmove_password = '@@{Cred_PC.secret}@@'\nAWS_ACCESS_KEY = '@@{Cred_AWS.username}@@'\nAWS_SECRET_KEY = '@@{Cred_AWS.secret}@@'\nPC_ADMIN = '@@{Cred_PC.username}@@'\nPC_PASSWORD = '@@{Cred_PC.secret}@@'\nPC_IP = '@@{PC_IP}@@'\n\n# Get auth token\napi_url = 'https:\/\/{}\/move\/v2\/users\/login'.format(move_ip)\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\n\npayload = {\n    \"Spec\": {\n        \"Password\": move_password, \n        \"UserName\": \"nutanix\"\n    }\n}\n\nr = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    move_token = resp['Status']['Token']\nelse:\n    print(\"Get request failed\", r.content)\n    exit(1)\n\nsleep(60)\n\n# Create AWS Provider\napi_url = 'https:\/\/{}\/move\/v2\/providers'.format(move_ip)\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json', 'Authorization': '{}'.format(move_token)}\n\npayload = {\n    \"Spec\": {\n        \"Name\": \"Calm AWS Demo\",\n        \"AWSAccessInfo\": {\n            \"AccessKey\": AWS_ACCESS_KEY,\n            \"SecretKey\": AWS_SECRET_KEY\n        },\n        \"Type\": \"AWS\"\n    }\n}\n\nr = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    move_aws_provideruuid = resp['MetaData']['UUID']\n    print(resp['Status']['State'])\n\nelse:\n    print(\"Get request failed\", r.content)\n    exit(1)\n\n# Create AHV Provider\napi_url = 'https:\/\/{}\/move\/v2\/providers'.format(move_ip)\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json', 'Authorization': '{}'.format(move_token)}\n\npayload = {\n    \"Spec\": {\n        \"Name\": \"Calm AHV Demo\",\n        \"AOSAccessInfo\": {\n            \"IPorFQDN\": PC_IP,\n            \"Password\": PC_PASSWORD,\n            \"Username\": PC_ADMIN\n        },\n        \"Type\": \"AOS\"\n    }\n}\n\nr = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    move_ahv_provideruuid = resp['MetaData']['UUID']\n    print(resp['Status']['State'])\n\nelse:\n    print(\"Get request failed\", r.content)\n    exit(1)\n\nprint(\"MOVE_AWS_PROVIDERUUID={}\".format(move_aws_provideruuid))\nprint(\"MOVE_AHV_PROVIDERUUID={}\".format(move_ahv_provideruuid))","eval_variables":["MOVE_AWS_PROVIDERUUID","MOVE_AHV_PROVIDERUUID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"Default_First_Deploy_Move_runbook","main_task_local_reference":{"kind":"app_task","name":"Default_First_Deploy_Move_dag"},"variable_list":[]},"name":"First_Deploy_Move"},{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"GetAwsAccountTask"},{"kind":"app_task","name":"CopyAmiTask"},{"kind":"app_task","name":"CreateSgTask"},{"kind":"app_task","name":"CreateKeyPairTask"},{"kind":"app_task","name":"AwsVmDeployTask"}],"name":"Default_Second_Deploy_AWS_Demo_VM_dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"GetAwsAccountTask"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"CopyAmiTask"}},{"from_task_reference":{"kind":"app_task","name":"CopyAmiTask"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"CreateSgTask"}},{"from_task_reference":{"kind":"app_task","name":"CreateSgTask"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"CreateKeyPairTask"}},{"from_task_reference":{"kind":"app_task","name":"CreateKeyPairTask"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"AwsVmDeployTask"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"ControlVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"GetAwsAccountTask","attrs":{"expected_response_params":[{"status":"SUCCESS","code":200,"type":""}],"request_body":"{\"filter\": \"type==aws\"}","headers":[],"url":"https:\/\/localhost:9440\/api\/nutanix\/v3\/accounts\/list","response_paths":{"CALM_AWS_ACCOUNT":"$.entities[0].metadata.uuid"},"retry_interval":10,"method":"POST","retry_count":1,"authentication":{"username":"admin","password":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"type":"basic"},"tls_verify":false,"content_type":"application\/json","connection_timeout":120,"type":"","proxy_type":""},"timeout_secs":"0","type":"HTTP","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"ControlVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"CopyAmiTask","attrs":{"exit_status":[],"script":"AWS_ACCESS_KEY = '@@{Cred_AWS.username}@@'\nAWS_SECRET_KEY = '@@{Cred_AWS.secret}@@'\nAWS_REGION = '@@{AWS_REGION}@@'\nAWS_SOURCE_AMI = '@@{AWS_SOURCE_AMI}@@'\n\nfrom boto3 import client\nfrom boto3 import setup_default_session\n\nsetup_default_session(\n    aws_access_key_id=AWS_ACCESS_KEY,\n    aws_secret_access_key=AWS_SECRET_KEY,\n    region_name=AWS_REGION\n)\n\nec2_client = client('ec2')\nimages = ec2_client.describe_images(\n    Owners=['self'],\n    Filters=[\n        {\n            \"Name\": \"name\",\n            \"Values\": [\n                'NTNX_MOVE_DEMO_CENTOS'\n            ]\n        }        \n    ]\n)\n\nif \"NTNX_MOVE_DEMO_CENTOS\" not in json.dumps(images):\n\n    response = ec2_client.copy_image(\n        Name = \"NTNX_MOVE_DEMO_CENTOS\",\n        SourceImageId = AWS_SOURCE_AMI,\n        SourceRegion = \"eu-west-2\"\n    )\n\n    ami_id = response['ImageId']\n\n    ami_state = ''\n    while ami_state != 'available':\n        ami_desc = ec2_client.describe_images(ImageIds=[ami_id])\n        ami_state = ami_desc['Images'][0]['State']\n        print(ami_state)\n        sleep(10)\n\n    print(\"AWS_AMI_ID={}\".format(ami_id))\n\nprint(\"AWS_AMI_ID={}\".format(images['Images'][0]['ImageId']))","eval_variables":["AWS_AMI_ID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"ControlVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"CreateSgTask","attrs":{"exit_status":[],"script":"AWS_ACCESS_KEY = '@@{Cred_AWS.username}@@'\nAWS_SECRET_KEY = '@@{Cred_AWS.secret}@@'\nAWS_REGION = '@@{AWS_REGION}@@'\n\nfrom boto3 import client\nfrom boto3 import setup_default_session\n\nsetup_default_session(\n    aws_access_key_id=AWS_ACCESS_KEY,\n    aws_secret_access_key=AWS_SECRET_KEY,\n    region_name=AWS_REGION\n)\n\nec2_client = client('ec2')\n\n# Get VPC ID\nvpcs = ec2_client.describe_vpcs(\n    Filters=[\n        {\n            \"Name\": \"isDefault\",\n            \"Values\": [\n                'true'\n            ]\n        }\n    ]\n)\n\nAWS_VPC = vpcs['Vpcs'][0]['VpcId']\n\n# Get Subnet ID\nsubnets = ec2_client.describe_subnets(\n    Filters=[\n        {\n            \"Name\": \"default-for-az\",\n            \"Values\": [\n                'true'\n            ]\n        }\n    ]\n)\n\nAWS_SUBNET = subnets['Subnets'][0]['SubnetId']\n\n# Configure Security Group\nsecurity_groups = ec2_client.describe_security_groups(GroupNames=['NTNX_MOVE_DEMO_CENTOS'])\n\nif \"NTNX_MOVE_DEMO_CENTOS\" not in json.dumps(security_groups):\n\n    response = ec2_client.create_security_group(\n        Description='Nutanix Move Demo - Allow HTTP and SSH',\n        GroupName='NTNX_MOVE_DEMO_CENTOS',\n        VpcId=AWS_VPC\n    )\n\n    sg_id = response['GroupId']\n\n    response = ec2_client.authorize_security_group_ingress(\n        GroupId=sg_id,\n        IpPermissions=[\n            {\n                'FromPort': 22,\n                'IpProtocol': 'tcp',\n                'ToPort': 22,\n                'IpRanges': [\n                    {\n                        'CidrIp': '0.0.0.0\/0',\n                        'Description': 'SSH access from the Internet'\n                    }\n                ]\n            },\n            {\n                'FromPort': 80,\n                'IpProtocol': 'tcp',\n                'ToPort': 80,\n                'IpRanges': [\n                    {\n                        'CidrIp': '0.0.0.0\/0',\n                        'Description': 'HTTP access from the Internet'\n                    }\n                ]\n            }\n        ]\n    )\n\n    print(\"AWS_SG_ID={}\".format(sg_id))\n\n# Set Calm variables\nprint(\"AWS_SG_ID={}\".format(security_groups['SecurityGroups'][0]['GroupId']))\nprint(\"AWS_VPC_ID={}\".format(AWS_VPC))\nprint(\"AWS_SUBNET_ID={}\".format(AWS_SUBNET))\n","eval_variables":["AWS_SG_ID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"ControlVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"CreateKeyPairTask","attrs":{"script":"AWS_ACCESS_KEY = '@@{Cred_AWS.username}@@'\nAWS_SECRET_KEY = '@@{Cred_AWS.secret}@@'\nAWS_REGION = '@@{AWS_REGION}@@'\n\nfrom boto3 import client\nfrom boto3 import setup_default_session\n\nsetup_default_session(\n    aws_access_key_id=AWS_ACCESS_KEY,\n    aws_secret_access_key=AWS_SECRET_KEY,\n    region_name=AWS_REGION\n)\n\nec2_client = client('ec2')\n\n# Check if SSH Demo Key exists if not create\nkey_pairs = ec2_client.describe_key_pairs(KeyNames=['NTNX_MOVE_DEMO_CENTOS'])\n\nif \"NTNX_MOVE_DEMO_CENTOS\" not in json.dumps(key_pairs):\n    \n    # Create SSH Key Pair\n    response = ec2_client.create_key_pair(\n        KeyName='NTNX_MOVE_DEMO_CENTOS'\n    )\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"ControlVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"AwsVmDeployTask","attrs":{"script":"BP_DIR_PATH=\"calm-dsl\/blueprints\/vm-mobility\"\nOS_USERNAME=\"@@{Cred_OS.username}@@\"\nOS_PASSWORD=@@{Cred_OS.secret}@@\nAWS_AMI_ID=\"@@{AWS_AMI_ID}@@\"\nAWS_REGION=\"@@{AWS_REGION}@@\"\nAWS_VPC_ID=\"@@{AWS_VPC_ID}@@\"\nAWS_SUBNET_ID=\"@@{AWS_SUBNET_ID}@@\"\nAWS_SG_ID=\"@@{AWS_SG_ID}@@\"\nCALM_AWS_ACCOUNT=\"@@{CALM_AWS_ACCOUNT}@@\"\nMOVE_VAPP_IP=\"@@{MOVE_VAPP_IP}@@\"\nPE_UUID=\"@@{PE_UUID}@@\"\nSC_UUID=\"@@{SC_UUID}@@\"\nAHV_NETWORKUUID=\"@@{PROJECT_NETWORKUUID}@@\"\nMOVE_AWS_PROVIDERUUID=\"@@{MOVE_AWS_PROVIDERUUID}@@\"\nMOVE_AHV_PROVIDERUUID=\"@@{MOVE_AHV_PROVIDERUUID}@@\"\nMOVE_PASSWORD=@@{Cred_PC.secret}@@\n\ngit --work-tree $HOME\/calm-dsl\/ --git-dir calm-dsl\/.git pull\n\ndocker run --rm -it \\\n    -e CALMDSL_OS_USERNAME=$OS_USERNAME \\\n    -e CALMDSL_OS_PASSWORD=$OS_PASSWORD \\\n    -e CALMDSL_AWS_AMI_ID=$AWS_AMI_ID \\\n    -e CALMDSL_AWS_REGION=$AWS_REGION \\\n    -e CALMDSL_AWS_VPC_ID=$AWS_VPC_ID \\\n    -e CALMDSL_AWS_SUBNET_ID=$AWS_SUBNET_ID \\\n    -e CALMDSL_AWS_SG_ID=$AWS_SG_ID \\\n    -e CALMDSL_CALM_AWS_ACCOUNT=$CALM_AWS_ACCOUNT \\\n    -e CALMDSL_MOVE_VAPP_IP=$MOVE_VAPP_IP \\\n    -e CALMDSL_PE_UUID=$PE_UUID \\\n    -e CALMDSL_SC_UUID=$SC_UUID \\\n    -e CALMDSL_AHV_NETWORKUUID=$AHV_NETWORKUUID \\\n    -e CALMDSL_MOVE_AWS_PROVIDERUUID=$MOVE_AWS_PROVIDERUUID \\\n    -e CALMDSL_MOVE_AHV_PROVIDERUUID=$MOVE_AHV_PROVIDERUUID \\\n    -e CALMDSL_MOVE_PASSWORD=$MOVE_PASSWORD \\\n    -v $HOME\/config\/.calm:\/root\/.calm \\\n    -v $HOME\/$BP_DIR_PATH\/:\/root\/vm-mobility\/ ntnx\/calm-dsl \\\n    \/bin\/bash -c \" \\\n    calm create bp -n @@{calm_application_name}@@-bp-move-awsVm \\\n    -f vm-mobility\/bps\/move-aws-demo-vm.py --force \\\n    && calm launch bp -i \\\n    -a @@{calm_application_name}@@-app-move-awsVm \\\n    @@{calm_application_name}@@-bp-move-awsVm \\\n    && calm watch app @@{calm_application_name}@@-app-move-awsVm\"\n","type":"","command_line_args":"","exit_status":[],"script_type":"sh"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"Default_Second_Deploy_AWS_Demo_VM_runbook","main_task_local_reference":{"kind":"app_task","name":"Default_Second_Deploy_AWS_Demo_VM_dag"},"variable_list":[]},"name":"Second_Deploy_AWS_Demo_VM"}],"name":"Default","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"Move_Version","value":"3.5.0","label":"","attrs":{"type":""},"is_hidden":true},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"HTTP_LOCAL","name":"AWS_REGION","value":"","label":"Select AWS Region","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"HTTP","attrs":{"expected_response_params":[{"status":"SUCCESS","code":200,"type":""}],"request_body":"{\"filter\": \"type==aws\"}","headers":[],"url":"https:\/\/localhost:9440\/api\/nutanix\/v3\/accounts\/list","response_paths":{"AWS_REGION":"$.entities[0].status.resources.data.regions[*].name"},"retry_interval":10,"method":"POST","retry_count":1,"authentication":{"type":"basic_with_cred","credential_local_reference":{"kind":"app_credential","name":"Cred_PC"}},"tls_verify":false,"content_type":"application\/json","connection_timeout":120,"type":"HTTP","proxy_type":""}}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"AWS_SOURCE_AMI","value":"ami-06fcfed4cbeecf121","label":"","attrs":{"type":""},"is_hidden":true}]}],"published_service_definition_list":[],"default_credential_local_reference":{"kind":"app_credential","name":"Cred_OS"},"type":"USER"},"name":"demo-workload-mobility"},"api_version":"3.0","metadata":{"last_update_time":"1589807869114497","kind":"blueprint","spec_version":4,"creation_time":"1589807610005930","name":"demo-workload-mobility"}}